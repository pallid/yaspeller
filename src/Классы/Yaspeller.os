#Область ОписаниеПеременных

Перем АдресСервиса;
Перем ПортСервиса;
Перем АдресСервисаПоУмолчанию;
Перем ПортСервисаПоУмолчанию;

Перем Языки Экспорт;
Перем Настройки Экспорт;
Перем Формат Экспорт;

#КонецОбласти

#Область ПрограммныйИнтерфейс

Процедура ПриСозданииОбъекта()
	
	УстановитьПараметрыПодключения(АдресСервисаПоУмолчанию, ПортСервисаПоУмолчанию);
	
КонецПроцедуры // ПриСозданииОбъекта()

// Устанавливает параметры для подключения к сервису.
//
// Параметры:
//  пАдресСервиса - Строка - Адрес сервиса. Указывается вместе с протоколом http/https
//  пПортСервиса - Строка - Порт сервиса
//
Процедура УстановитьПараметрыПодключения(пАдресСервиса, пПортСервиса) Экспорт
	АдресСервиса = пАдресСервиса;
	ПортСервиса = пПортСервиса;
КонецПроцедуры // УстановитьПараметрыПодключения()

// Возвращает массив ошибок с описаниями
//	если ошибок не найдено, вернется пустой массив.
//
// Параметры:
//  Текст - Строка - Текст для проверки.
//  Языки - LanguageYaspeller - Необязательный. Объект LanguageYaspeller
//  Настройки - OptionsYaspeller - Необязательный. Объект OptionsYaspeller.
//  Формат - FormatYaspeller - Необязательный. Указывает формат проверяемого текста. По умолчанию FormatYaspeller.ТекстБезРазметки.
//
// Возвращаемое значение:
//   Массив   - Массив объектов SpellResult
// 
Функция ПроверитьТекст(Текст, Языки = Неопределено, Настройки = Неопределено, Формат = Неопределено) Экспорт

	Соединение = Новый HTTPСоединение(АдресСервиса, ПортСервиса);		
	Заголовки = Новый Соответствие;
    Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded"); 
    Запрос = Новый HTTPЗапрос("/services/spellservice.json/checkText", Заголовки);
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить("text="+Текст);
	
	Если Языки = Неопределено Тогда
		ТекстНастройкиЯзыков = "ru,en";
	Иначе
		ТекстНастройкиЯзыков = Языки.ПолучитьНастройки();	
	КонецЕсли;
	МассивПараметров.Добавить("lang="+ТекстНастройкиЯзыков);

	Если Настройки = Неопределено Тогда
		ТекстНастройки = 0;
	Иначе
		ТекстНастройки = Языки.СуммаОпций();	
	КонецЕсли;
	МассивПараметров.Добавить("options="+ТекстНастройки);

	Если Формат = Неопределено Тогда
		ТекстФормата = "plain";
	Иначе
		ТекстФормата = Формат;	
	КонецЕсли;
	МассивПараметров.Добавить("format="+ТекстФормата);

	ТекстПараметрыЗапроса = СтрСоединить(МассивПараметров, "&");

	Запрос.УстановитьТелоИзСтроки(ТекстПараметрыЗапроса);

	Ответ = Соединение.ОтправитьДляОбработки(Запрос);
	Если Ответ.КодСостояния = 200 Тогда
		ТелоОтвета = Ответ.ПолучитьТелоКакСтроку();
		Чтение = Новый ЧтениеJSON;
		Чтение.УстановитьСтроку(ТелоОтвета);
		ДанныеОтвета = ПрочитатьJSON(Чтение);
		Если ДанныеОтвета = Неопределено Тогда	
			ТекстОшибки = ТелоОтвета;
			Сообщить(ТекстОшибки, СтатусСообщения.Важное);
		Иначе
			МассивРезультатовПроверки = ПолучитьМассивРезультатовПроверки(ДанныеОтвета);
		КонецЕсли;
	Иначе
		Сообщить("ответ сервиса: " + Ответ.КодСостояния, СтатусСообщения.Важное);
		Сообщить("тело ответа: " + Ответ.ПолучитьТелоКакСтроку(), СтатусСообщения.Важное);
	КонецЕсли;
	
	Возврат МассивРезультатовПроверки;

КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьМассивРезультатовПроверки(Данные)

	Массив = Новый Массив;

	Для Каждого СтрокаДанных Из Данные Цикл
		Ошибка = Новый SpellResult(СтрокаДанных);
		Массив.Добавить(Ошибка);
	КонецЦикла;	
	
	Возврат Массив;

КонецФункции

Функция ПолучитьСтруктуруОписанияОшибки()

	Возврат Новый Структура("КодОшибки, Позиция, Строка, Столбец, Длина, ИсходноеСлово, Подсказки");

КонецФункции

#КонецОбласти

АдресСервисаПоУмолчанию = "https://speller.yandex.net";
ПортСервисаПоУмолчанию = "443";